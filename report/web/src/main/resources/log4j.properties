
#############
# 输出到控制台
#############

# log4j.rootLogger日志输出类别和级别：只输出不低于该级别的日志信息DEBUG < INFO < WARN < ERROR < FATAL
# INFO：日志级别     CONSOLE：输出位置自己定义的一个名字       logfile：输出位置自己定义的一个名字
#log4j.rootLogger=INFO,CONSOLE,logfile
## 配置CONSOLE输出到控制台
#log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
## 配置CONSOLE设置为自定义布局模式
#log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
## 配置CONSOLE日志的输出格式  [frame] 2019-08-22 22:52:12,000  %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
#log4j.appender.CONSOLE.layout.ConversionPattern=[frame] %d{yyyy-MM-dd HH:mm:ss,SSS} - %-4r %-5p [%t] %C:%L %x - %m%n

################
# 输出到日志文件中(文件大小到达指定尺寸的时候产生新的日志文件)
################

## 配置logfile输出到文件中 文件大小到达指定尺寸的时候产生新的日志文件
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
## 保存编码格式
#log4j.appender.logfile.Encoding=UTF-8
## 输出文件位置此为项目根目录下的logs文件夹中
#log4j.appender.logfile.File=logs/qlzh.log
## 后缀可以是KB,MB,GB达到该大小后创建新的日志文件
#log4j.appender.logfile.MaxFileSize=100MB
## 设置滚定文件的最大值3 指可以产生root.log.1、root.log.2、root.log.3和root.log四个日志文件
#log4j.appender.logfile.MaxBackupIndex=3
## 配置logfile为自定义布局模式
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n


##########################
# 对不同的类输出不同的日志文件
##########################

## com.sy.controller包下的日志单独输出
#log4j.logger.com.sy.controller=DEBUG,bagedate
## 设置为false该日志信息就不会加入到rootLogger中了
#log4j.additivity.com.sy.controller=false
## 下面就和上面配置一样了
#log4j.appender.bagedate=org.apache.log4j.RollingFileAppender
#log4j.appender.bagedate.Encoding=UTF-8
#log4j.appender.bagedate.File=logs/bagedate.log
#log4j.appender.bagedate.MaxFileSize=100MB
#log4j.appender.bagedate.MaxBackupIndex=3
#log4j.appender.bagedate.layout=org.apache.log4j.PatternLayout
#log4j.appender.bagedate.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n


################
# 输出到日志文件中(每天产生一个日志文件)
################
log4j.rootCategory=INFO,stdout,file
# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
# 日志输出到文件
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.file=${project.basedir}/log/springboot.log
log4j.appender.file.file=dailylogs/qlzhlog.log
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n